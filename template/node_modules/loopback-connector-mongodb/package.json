{
  "name": "loopback-connector-mongodb",
  "version": "1.1.8",
  "description": "LoopBack MongoDB Connector",
  "keywords": [
    "StrongLoop",
    "LoopBack",
    "MongoDB",
    "DataSource",
    "Connector"
  ],
  "main": "index.js",
  "scripts": {
    "test": "make test"
  },
  "dependencies": {
    "mongodb": "~1.3.19"
  },
  "peerDependencies": {
    "loopback-datasource-juggler": "1.x.x"
  },
  "devDependencies": {
    "loopback-datasource-juggler": "1.x.x",
    "should": "~1.2.2",
    "mocha": "~1.14.0",
    "rc": "~0.3.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/strongloop/loopback-connector-mongodb"
  },
  "license": {
    "name": "Dual MIT/StrongLoop",
    "url": "https://github.com/strongloop/loopback-connector-mongodb/blob/master/LICENSE"
  },
  "readme": "## loopback-connector-mongodb\n\nMongoDB connector for loopback-datasource-juggler.\n\n## Usage\n\nTo use it you need `loopback-datasource-juggler@1.0.x`.\n\n1. Setup dependencies in `package.json`:\n\n    ```json\n    {\n      ...\n      \"dependencies\": {\n        \"loopback-datasource-juggler\": \"1.0.x\",\n        \"loopback-connector-mongodb\": \"1.0.x\"\n      },\n      ...\n    }\n    ```\n\n2. Use:\n\n    ```javascript\n        var DataSource = require('loopback-datasource-juggler').DataSource;\n        var ds = new DataSource('mongodb');\n        ...\n    ```\n\n\n### About MongoDB _id field\n\nMongoDB uses a specific ID field with BSON `ObjectID` type, named `_id`\n\nThis connector does not expose MongoDB `_id` by default, to keep consistency with other connectors. Instead, it is transparently mapped to the `id` field - which is declared by default in the model if you do not define any `id`. \n\nIf you wish to still be able to access `_id` property, you must define it explicitely as your model ID, along with its type.\n\n*Example :*\n\n    var ds = app.dataSources.db;\n    MyModel = ds.createModel('mymodel', {\n        _id: { type: ds.ObjectID, id: true }\n    });\n\n*Example with a Number _id :\n\n    MyModel = ds.createModel('mymodel', {\n        _id: { type: Number, id: true }\n    });\n\n\n## Customizing MongoDB configuration for tests/examples\n\nBy default, examples and tests from this module assume there is a MongoDB server\ninstance running on localhost at port 27017.\n\nTo customize the settings, you can drop in a `.loopbackrc` file to the root directory\nof the project or the home folder.\n\nThe .loopbackrc file should be in JSON format, for example:\n\n    {\n        \"dev\": {\n            \"mongodb\": {\n                \"host\": \"127.0.0.1\",\n                \"database\": \"test\",\n                \"username\": \"youruser\",\n                \"password\": \"yourpass\",\n                \"port\": 27017\n            }\n        },\n        \"test\": {\n            \"mongodb\": {\n                \"host\": \"127.0.0.1\",\n                \"database\": \"test\",\n                \"username\": \"youruser\",\n                \"password\": \"yourpass\",\n                \"port\": 27017\n            }\n        }\n    }\n\n**Note**: username/password is only required if the MongoDB server has\nauthentication enabled.\n\n## Running tests\n\n    npm test\n\n## Release notes\n\n  * 1.1.7 - Do not return MongoDB-specific _id to client API, except if specifically specified in the model definition\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/strongloop/loopback-connector-mongodb/issues"
  },
  "homepage": "https://github.com/strongloop/loopback-connector-mongodb",
  "_id": "loopback-connector-mongodb@1.1.8",
  "_from": "loopback-connector-mongodb@~1.1.6"
}
